# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:SFNS Display 11 
#font pango:Fira-code 11 

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status

bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status
bindsym XF86MonBrightnessUp exec --no-startup-id echo $(awk '{print $1 + 2400}' /sys/class/backlight/intel_backlight/brightness) > /sys/class/backlight/intel_backlight/brightness
bindsym XF86MonBrightnessDown exec --no-startup-id echo $(awk '{print $1 - 2400}' /sys/class/backlight/intel_backlight/brightness) > /sys/class/backlight/intel_backlight/brightness

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+shift+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
#workspace variables
set $workspace1 "1"
set $workspace2 "2"
set $workspace3 "3"
set $workspace4 "4"
set $workspace5 "5"
set $workspace6 "6"
set $workspace7 "7"
set $workspace8 "8"
set $workspace9 "9"
set $workspace0 "10"
# switch to workspace
bindsym $mod+1 workspace $workspace1
bindsym $mod+2 workspace $workspace2
bindsym $mod+3 workspace $workspace3
bindsym $mod+4 workspace $workspace4
bindsym $mod+5 workspace $workspace5
bindsym $mod+6 workspace $workspace6
bindsym $mod+7 workspace $workspace7
bindsym $mod+8 workspace $workspace8
bindsym $mod+9 workspace $workspace9
bindsym $mod+0 workspace $workspace0

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $workspace1
bindsym $mod+Shift+2 move container to workspace $workspace2
bindsym $mod+Shift+3 move container to workspace $workspace3
bindsym $mod+Shift+4 move container to workspace $workspace4
bindsym $mod+Shift+5 move container to workspace $workspace5
bindsym $mod+Shift+6 move container to workspace $workspace6
bindsym $mod+Shift+7 move container to workspace $workspace7
bindsym $mod+Shift+8 move container to workspace $workspace8
bindsym $mod+Shift+9 move container to workspace $workspace9
bindsym $mod+Shift+0 move container to workspace $workspace0

# Assign programs to specific workspaces

assign [class="firefox" instance="Navigator"] $workspace2
assign [class="Thunderbird" instance="Mail"] $workspace3
assign [class="TelegramDesktop" instance="telegram-desktop"] $workspace3
assign [class="Caprine" instance="caprine"] $workspace3
for_window [class="Caprine"] move to workspace $workspace3
assign [class="Rhythmbox"] $workspace0
for_window [class="Spotify"] move to workspace $workspace0
for_window [class="spotify"] move to workspace $workspace0
for_window [class="Spotify Premium"] move to workspace $workspace0
assign [class="Spotify"] $workspace0
assign [class="spotify"] $workspace0
assign [class="mpv"] $workspace9
for_window [class="mpv"] move to workspace $workspace9
for_window [class="Jellyfin Media Player"] move to workspace $workspace9
assign [class="Jellyfin Media Player"] $workspace9
assign [class="Signal Beta"] $workspace3
assign [class="FreeTube"] $workspace9

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the windows width.
        # Pressing right will grow the windows width.
        # Pressing up will shrink the windows height.
        # Pressing down will grow the windows height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"
# Set colors from Xresources
# Change 'color7' and 'color2' to whatever colors you want i3 to use
# from the generated scheme.
# NOTE: The '#f0f0f0' in the lines below is the color i3 will use if
# it fails to get colors from Xresources for some reason.
set_from_resource $fg i3wm.color7 #f0f0f0
set_from_resource $bg i3wm.color2 #f0f0f0
#
# class                 border  backgr. text indicator child_border
client.focused          $bg     $bg     $fg  $bg       $bg
client.focused_inactive $bg     $bg     $fg  $bg       $bg
client.unfocused        $bg     $bg     $fg  $bg       $bg
client.urgent           $bg     $bg     $fg  $bg       $bg
client.placeholder      $bg     $bg     $fg  $bg       $bg

client.background       $bg

# PROTIP: You can also dynamically set dmenu's colors this way:
#set colors

########################################################################################
#set $bg-color 	         "#2f343f"
#set $inactive-bg-color   "#2f343f"
set $text-color          "#f3f4f5"
set $inactive-text-color "#676E7D"
set $urgent-bg-color     "#E53935"
#
##window colors
##                       border              background         text                 indicator
#client.focused          "#06CDD0"           $bg-color          $text-color          "#E55B0A"
#client.unfocused        $inactive-bg-color $inactive-bg-color $inactive-text-color "#E55B0A"
#client.focused_inactive $inactive-bg-color $inactive-bg-color $inactive-text-color "#E55B0A"
#client.urgent           $urgent-bg-color    $urgent-bg-color   $text-color          "#E55B0A"
#

#i3bar (no longer used)

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
#bar {
#		position top
#        status_command i3blocks -c /home/gedas/.i3/i3blocks.conf
##colors {
##		background "#2f343f"
#		background $bg
##	    	separator "#757575"
#	    	separator $fg 
#		#                  border             background         text
#		focused_workspace  $bg                $bg                $text-color
#		inactive_workspace $bg                $bg                $inactive-text-color
#		urgent_workspace   $urgent-bg-color   $urgent-bg-color   $text-color
#		                  							}
#}
#############################################################################################

# Change default lock binding
#bindsym $mod+shift+x exec i3lock --color "#2F343F" 
bindsym $mod+shift+x exec ~/.i3/lock.sh 
# Media player controls
bindsym XF86AudioPlay exec playerctl play
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# Launch Polybar

exec_always $HOME/.config/polybar/launch.sh

#Set Wallpaper
exec_always feh --bg-fill /home/gedas/pictures/wall/bg/bg.*
exec wal -R
#bindsym $mod+c exec wal -s -t -e -i /home/gedas/pictures/wall/
#smooth transitions
exec_always compton -f

#rofi
bindsym $mod+d exec rofi -show run
bindsym $mod+p exec rofi -show power-menu -modi power-menu:rofi-power-menu
bindsym $mod+shift+d exec maim --select ~/pictures/Screenshots/$(date +%s).png
bindsym $mod+shift+s exec maim --select | xclip -selection clipboard -t image/png
bindsym $mod+y exec myyt
bindsym $mod+ctrl+k exec killprocess

#move workspaces between displays
bindsym $mod+m move workspace to output DP-1-1-3
bindsym $mod+n move workspace to output DP-1-1-2

#setup displays
bindsym $mod+ctrl+m exec xrandr --output HDMI-0 --off --output eDP-1-1 --off --output DP-1-1 --off --output HDMI-1-1 --off --output DP-1-2 --off --output HDMI-1-2 --off --output DP-1-3 --off --output HDMI-1-3 --off --output DP-1-1-1 --off --output DP-1-1-2 --mode 1920x1080 --pos 0x0 --rotate normal --output DP-1-1-3 --mode 1920x1080 --pos 1920x0 --rotate normal && ~/.config/polybar/launch.sh

bindsym $mod+ctrl+n exec xrandr --output HDMI-0 --off --output eDP-1-1 --primary --mode 1920x1080 --pos 0x0 --rotate normal --output DP-1-1 --off --output HDMI-1-1 --off --output DP-1-2 --off --output HDMI-1-2 --off --output DP-1-3 --off --output HDMI-1-3 --off --output DP-1-1-1 --off --output DP-1-1-2 --off --output DP-1-1-3 --off && ~/.config/polybar/launch.sh

bindsym $mod+ctrl+l xrandr --output HDMI-0 --off --output eDP-1-1 --mode 1920x1080 --pos 0x0 --rotate normal --output DP-1-1 --off --output HDMI-1-1 --off --output DP-1-2 --off --output HDMI-1-2 --off --output DP-1-3 --off --output HDMI-1-3 --off --output DP-1-1-1 --off --output DP-1-1-2 --mode 1920x1080 --pos 1920x0 --rotate normal --output DP-1-1-3 --mode 1920x1080 --pos 3840x0 --rotate normal && ~/.config/polybar/launch.sh

#EN language
exec setxkbmap us

#prevent monitors from sleeping
exec xset s off -dpms 


###################---i3 GAPS---########################
# Disable window titlebars entirely
for_window [class="^.*"] border pixel 1

# Set inner/outer gaps
gaps inner 5 
gaps outer 5 

# Additionally, you can issue commands with the following syntax. This is useful to bind keys to changing the gap size.
# gaps inner|outer current|all set|plus|minus <px>
# gaps inner all set 10
# gaps outer all plus 5

# Smart gaps (gaps used if only more than one container on the workspace)
smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace)
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
#smart_borders on

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}


for_window [instance="origin.exe"] floating enable
